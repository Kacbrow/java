public class Book {
    public String title, author;
    public int numberOfPages;

    public Book(String title, String author, int numberOfPages) {
        this.numberOfPages = (numberOfPages > 0) ? numberOfPages : 1;
        this.title = (title == null || title.isEmpty()) ? "" : title;
        this.author = (author == null || author.isEmpty()) ? "" : author;
    }
    @Override
    public String toString(){
        return "Book: " + this.title +
                "\nby " + this.author +
                ",\nPages:\n" +
                this.numberOfPages +
                "\n.";
    }

    @Override
    public boolean equals(Object obj){
        if(obj instanceof Book o){
            boolean pages = this.numberOfPages == o.numberOfPages;
            boolean author = this.author.equals(o.author);
            boolean title = this.title.equals(o.title);
            return pages && author && title;
        }
        return false;
    }
}

public class Czlowiek extends Istota{
    public Czlowiek() {
        System.out.println("inicjalizacja Czlowiek");
    }
}


public class Istota {
    public Istota() {
        System.out.println("Inicjalizacja Istota");
    }
}
tworzymy clase kalkulator.java
public class Kalkulator {
    public int dodaj(int a, int b){
        return a + b;
    }
}

class KalkulatorRozszerzony extends Kalkulator{
    public int dodaj(int a, int b, int c){ //to jest overload nie override
        return a+b+c;
    }
    public void test(){
        System.out.println("s");
    }
}

public class Kalkulator {
    public int dodaj(int a, int b){
        return a + b;
    }
}

class KalkulatorRozszerzony extends Kalkulator{
    public int dodaj(int a, int b, int c){ //to jest overload nie override
        return a+b+c;
    }
    public void test(){
        System.out.println("s");
    }
}

tworzymy clase komputer.java
public class Komputer {
    public void uruchom(){
        System.out.println("Komputer uruchomiony");
    }
}

class Laptop extends Komputer{
    @Override
    /*protected*/public void uruchom(){
        System.out.println("Laptop uruchomiony");
    }
}

  public class Komputer {
    public void uruchom(){
        System.out.println("Komputer uruchomiony");
    }
}

class Laptop extends Komputer{
    @Override
    /*protected*/public void uruchom(){
        System.out.println("Laptop uruchomiony");
    }
}

  person.java
  public class Person {
    private String firstName;
    protected String lastName;

    public String getFirstName() {
        return firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public Person(String firstName, String lastName) {
        this.firstName = firstName;
        this.lastName = lastName;
    }
}

class Employee extends Person{
    public Employee(String firstName, String lastName) {
        super(firstName, lastName);
    }

    public void displayData(){
        System.out.println(getFirstName() + " " + getLastName());
    }
}

  podjazd.java
  public class Pojazd {
    public void jedz(){
        System.out.println("Pojazd jedzie");
    }
}

class Samochod extends Pojazd{
    public String marka;

    public Samochod(String marka) {
        this.marka = marka;
    }

    @Override
    public void jedz() {
        super.jedz();
        System.out.println("Marka: " + this.marka);
    }
}


  public class Programista extends Czlowiek{
    public Programista() {
        System.out.println("Inicjalizacja Programista");
    }
}

tool.java
  public class Tool {
    public String nameOfTool;
    protected Tool(String nameOfTool){
        this.nameOfTool = nameOfTool;
    }
}

class Hammer extends Tool{

    protected Hammer(String nameOfTool) {
        super(nameOfTool);
    }
}

  

  

  
  




